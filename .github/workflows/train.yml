name: Continuous Training

on:
  schedule:
    - cron: "0 0 * * *" # Run every day at midnight
  workflow_dispatch: # Run manually
  push:
    branches:
      - main

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Git user identity
      - name: Configure Git User
        run: |
         git config --global user.name "GitHub Actions"
         git config --global user.email "actions@github.com"

      # Step 3: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dvc[all]
          pip install -r requirements.txt

      # Step 5: Configure Google Drive credentials
      - name: Configure Google Drive credentials
        env:
          GDRIVE_SERVICE_ACCOUNT_BASE64: ${{ secrets.GDRIVE_SERVICE_ACCOUNT_BASE64 }}
        run: |
          echo "${{ secrets.GDRIVE_SERVICE_ACCOUNT_BASE64 }}" | base64 --decode > google_services.json

      # Step 6: Configure DVC Remote for Google Drive
      - name: Configure DVC Remote
        run: |
          dvc remote modify storage gdrive_use_service_account true
          dvc remote modify --local storage gdrive_service_account_json_file_path google_services.json

      # Step 7: Pull dataset from DVC remote (Google Drive)
      - name: Pull dataset
        run: |
          dvc pull

      # Step 8: Append new data to the dataset
      - name: Update dataset
        run: |
          dvc add data/train.csv
          git add data/train.csv.dvc
          git commit -m "Update train.csv with new data"

      # Step 9: Push updated dataset to DVC remote
      - name: Push updated dataset
        run: dvc push

      # Step 10: Train the model
      - name: Train the model
        run: |
          python src/models/train_model.py

      # Step 11: Push DVC-tracked files to remote storage
      - name: Push DVC artifacts
        run: dvc push
